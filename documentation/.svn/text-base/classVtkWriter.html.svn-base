<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>UKFTractography: VtkWriter Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.1 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.html"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle">
<h1>VtkWriter Class Reference</h1>  </div>
</div>
<div class="contents">
<!-- doxytag: class="VtkWriter" -->
<p>Class that allows to write a bunch of fibers to a .vtk file.  
<a href="#_details">More...</a></p>

<p><code>#include &lt;<a class="el" href="vtk__writer_8h_source.html">vtk_writer.h</a>&gt;</code></p>

<p><a href="classVtkWriter-members.html">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac4bb4629ff7a100986bc2d9f6f42dfff"></a><!-- doxytag: member="VtkWriter::VtkWriter" ref="ac4bb4629ff7a100986bc2d9f6f42dfff" args="(const ISignalData *signal_data, Tractography::model_type filter_model_type, bool write_tensors)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#ac4bb4629ff7a100986bc2d9f6f42dfff">VtkWriter</a> (const <a class="el" href="classISignalData.html">ISignalData</a> *signal_data, <a class="el" href="classTractography.html#aba47c974bb629865fd940cb359b209d2">Tractography::model_type</a> filter_model_type, bool write_tensors)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#a4912ede23294693985f5e98fc0c2c5f8">~VtkWriter</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#a21fc9cd4584735399a6f299991125336">Write</a> (const std::string &amp;file_name, const std::string &amp;tractsWithSecondTensor, const std::vector&lt; <a class="el" href="structFiber.html">Fiber</a> &gt; &amp;fibers, bool write_state, bool store_glyphs)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Writes the fibers to the VTK file and attaches the selected values to the fiber.  <a href="#a21fc9cd4584735399a6f299991125336"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#a19c99ec29eb68cc7f6e24a1828a8eb9c">WriteGlyphs</a> (const std::string &amp;file_name, const std::vector&lt; <a class="el" href="structFiber.html">Fiber</a> &gt; &amp;fibers)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#a9451e24d5603df237efde713f8aa6c02">set_transform_position</a> (bool transform_position)</td></tr>
<tr><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#aa3086e9b0c7644d28188a419db860fb9">WritePoint</a> (const <a class="el" href="structvec__t.html">vec_t</a> &amp;point, std::ofstream &amp;output, int &amp;counter)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#a649ade30b89bcfd6bc45f1ba4d4f27f4">writeFibersAndTensors</a> (std::ofstream &amp;output, const std::vector&lt; <a class="el" href="structFiber.html">Fiber</a> &gt; &amp;fibers, const int tensorNumber)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#a060f24f2727b129079c8408335299207">State2Tensor</a> (<a class="el" href="unscented__kalman__filter_8h.html#a021492bb7579a4e15e9d7fe33d1f538f">State</a> &amp;state, <a class="el" href="structmat__t.html">mat_t</a> &amp;D, int tensorNumber)</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Reconstructs the tensor from the state for each case.  <a href="#a060f24f2727b129079c8408335299207"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classISignalData.html">ISignalData</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#a550b0c3bfe621f238b7d950f9a2fca53">_signal_data</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#a8a51cf2e6197e2ddd3e9cd8712a6d49f">_transform_position</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classTractography.html#aba47c974bb629865fd940cb359b209d2">Tractography::model_type</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#aac7bf2f860d12a746d6d47f763bfa308">_filter_model_type</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#ab341413673a7f0214233fa8e949c0fc3">_scale_glyphs</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#a629ae9b78e15790625ec5f438da98d6c">_write_tensors</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa97c4ba709e5814c52d1ea588e9bd313"></a><!-- doxytag: member="VtkWriter::_p_l1" ref="aa97c4ba709e5814c52d1ea588e9bd313" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>_p_l1</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a507d3ba0b8e8823070d0943eec585622"></a><!-- doxytag: member="VtkWriter::_p_l2" ref="a507d3ba0b8e8823070d0943eec585622" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>_p_l2</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a42e716961794ca30b903ae07e50d4ceb"></a><!-- doxytag: member="VtkWriter::_p_l3" ref="a42e716961794ca30b903ae07e50d4ceb" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>_p_l3</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a15f3b5abbb8708a37346c4f90e82628a"></a><!-- doxytag: member="VtkWriter::_p_m1" ref="a15f3b5abbb8708a37346c4f90e82628a" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>_p_m1</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0c3b7ceb13208498d03b75e4e480c126"></a><!-- doxytag: member="VtkWriter::_p_m2" ref="a0c3b7ceb13208498d03b75e4e480c126" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>_p_m2</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5fc86d07f132204980180b1c436cab74"></a><!-- doxytag: member="VtkWriter::_p_m3" ref="a5fc86d07f132204980180b1c436cab74" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>_p_m3</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adb3bc195e85c5f7d9d1f202b4e942820"></a><!-- doxytag: member="VtkWriter::_p_psi" ref="adb3bc195e85c5f7d9d1f202b4e942820" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>_p_psi</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a93d0479529abd82d2e49fcba9c066ea6"></a><!-- doxytag: member="VtkWriter::_p_theta" ref="a93d0479529abd82d2e49fcba9c066ea6" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>_p_theta</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab958248b792d513f5ff6bc80863d5c11"></a><!-- doxytag: member="VtkWriter::_p_phi" ref="ab958248b792d513f5ff6bc80863d5c11" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>_p_phi</b></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#ab62b8734b94ff0bbbac6c81a6048fb76">_tensor_space</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#a7f1525a5f4aea2c69e743489c3a7e526">_num_tensors</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#afceb4d86609a27a8b6c976b5b2772083">_full</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#ad1f38d0a5dac88ac99890199a5d6dc26">_eigenScaleFactor</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structmat__t.html">mat_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVtkWriter.html#aef2de19fd2bd57475a47b92e969f433f">_sizeFreeI2R</a></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Class that allows to write a bunch of fibers to a .vtk file. </p>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a4912ede23294693985f5e98fc0c2c5f8"></a><!-- doxytag: member="VtkWriter::~VtkWriter" ref="a4912ede23294693985f5e98fc0c2c5f8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual VtkWriter::~VtkWriter </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Destructor </p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a9451e24d5603df237efde713f8aa6c02"></a><!-- doxytag: member="VtkWriter::set_transform_position" ref="a9451e24d5603df237efde713f8aa6c02" args="(bool transform_position)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void VtkWriter::set_transform_position </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>transform_position</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Sets the variable that toggles the transform from ijk to RAS before writing the fiber to VTK. </p>

</div>
</div>
<a class="anchor" id="a060f24f2727b129079c8408335299207"></a><!-- doxytag: member="VtkWriter::State2Tensor" ref="a060f24f2727b129079c8408335299207" args="(State &amp;state, mat_t &amp;D, int tensorNumber)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void VtkWriter::State2Tensor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="unscented__kalman__filter_8h.html#a021492bb7579a4e15e9d7fe33d1f538f">State</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structmat__t.html">mat_t</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>D</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>tensorNumber</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Reconstructs the tensor from the state for each case. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[out]</tt>&nbsp;</td><td valign="top"><em>D</em>&nbsp;</td><td>The calculated diffusion tensor </td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.html#_todo000009">Todo:</a></b></dt><dd>I think there is something wrong with choosing a orthonormal basis for the tensor </dd></dl>

</div>
</div>
<a class="anchor" id="a21fc9cd4584735399a6f299991125336"></a><!-- doxytag: member="VtkWriter::Write" ref="a21fc9cd4584735399a6f299991125336" args="(const std::string &amp;file_name, const std::string &amp;tractsWithSecondTensor, const std::vector&lt; Fiber &gt; &amp;fibers, bool write_state, bool store_glyphs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool VtkWriter::Write </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>file_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>tractsWithSecondTensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structFiber.html">Fiber</a> &gt; &amp;&nbsp;</td>
          <td class="paramname"> <em>fibers</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>write_state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>store_glyphs</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Writes the fibers to the VTK file and attaches the selected values to the fiber. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>file_name</em>&nbsp;</td><td>The path of the output fiber file (*.vtk) </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>tractsWithSecondTensor</em>&nbsp;</td><td>File path for the fibers generated with the second tensor This one is optional. </td></tr>
    <tr><td valign="top"><tt>[in]</tt>&nbsp;</td><td valign="top"><em>store_glyphs</em>&nbsp;</td><td>Write glyphs (i.e. main tensor directions) to a file named glyphs_{tracts}. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a649ade30b89bcfd6bc45f1ba4d4f27f4"></a><!-- doxytag: member="VtkWriter::writeFibersAndTensors" ref="a649ade30b89bcfd6bc45f1ba4d4f27f4" args="(std::ofstream &amp;output, const std::vector&lt; Fiber &gt; &amp;fibers, const int tensorNumber)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void VtkWriter::writeFibersAndTensors </td>
          <td>(</td>
          <td class="paramtype">std::ofstream &amp;&nbsp;</td>
          <td class="paramname"> <em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structFiber.html">Fiber</a> &gt; &amp;&nbsp;</td>
          <td class="paramname"> <em>fibers</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&nbsp;</td>
          <td class="paramname"> <em>tensorNumber</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Writes the fibers and all values attached to them to a VTK file </p>

</div>
</div>
<a class="anchor" id="a19c99ec29eb68cc7f6e24a1828a8eb9c"></a><!-- doxytag: member="VtkWriter::WriteGlyphs" ref="a19c99ec29eb68cc7f6e24a1828a8eb9c" args="(const std::string &amp;file_name, const std::vector&lt; Fiber &gt; &amp;fibers)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool VtkWriter::WriteGlyphs </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>file_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structFiber.html">Fiber</a> &gt; &amp;&nbsp;</td>
          <td class="paramname"> <em>fibers</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Write the glyphs (i.e. main tensor directions) to a file named glyphs_{tracts}. </p>

</div>
</div>
<a class="anchor" id="aa3086e9b0c7644d28188a419db860fb9"></a><!-- doxytag: member="VtkWriter::WritePoint" ref="aa3086e9b0c7644d28188a419db860fb9" args="(const vec_t &amp;point, std::ofstream &amp;output, int &amp;counter)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void VtkWriter::WritePoint </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structvec__t.html">vec_t</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>point</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::ofstream &amp;&nbsp;</td>
          <td class="paramname"> <em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&nbsp;</td>
          <td class="paramname"> <em>counter</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Writes a point to the output stream, and performs the ijk-RAS transform if set to do so. Also this function makes sure that the output VTK file is well formatted. </p>

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="ad1f38d0a5dac88ac99890199a5d6dc26"></a><!-- doxytag: member="VtkWriter::_eigenScaleFactor" ref="ad1f38d0a5dac88ac99890199a5d6dc26" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const double <a class="el" href="classVtkWriter.html#ad1f38d0a5dac88ac99890199a5d6dc26">VtkWriter::_eigenScaleFactor</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Additional scaling of the eigenvalues before writing </p>

</div>
</div>
<a class="anchor" id="aac7bf2f860d12a746d6d47f763bfa308"></a><!-- doxytag: member="VtkWriter::_filter_model_type" ref="aac7bf2f860d12a746d6d47f763bfa308" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classTractography.html#aba47c974bb629865fd940cb359b209d2">Tractography::model_type</a> <a class="el" href="classVtkWriter.html#aac7bf2f860d12a746d6d47f763bfa308">VtkWriter::_filter_model_type</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>What model was the tractography performed with </p>

</div>
</div>
<a class="anchor" id="afceb4d86609a27a8b6c976b5b2772083"></a><!-- doxytag: member="VtkWriter::_full" ref="afceb4d86609a27a8b6c976b5b2772083" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classVtkWriter.html#afceb4d86609a27a8b6c976b5b2772083">VtkWriter::_full</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Was the full or simplified tensor model used? </p>

</div>
</div>
<a class="anchor" id="a7f1525a5f4aea2c69e743489c3a7e526"></a><!-- doxytag: member="VtkWriter::_num_tensors" ref="a7f1525a5f4aea2c69e743489c3a7e526" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classVtkWriter.html#a7f1525a5f4aea2c69e743489c3a7e526">VtkWriter::_num_tensors</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The number of tensors used </p>

</div>
</div>
<a class="anchor" id="ab341413673a7f0214233fa8e949c0fc3"></a><!-- doxytag: member="VtkWriter::_scale_glyphs" ref="ab341413673a7f0214233fa8e949c0fc3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const double <a class="el" href="classVtkWriter.html#ab341413673a7f0214233fa8e949c0fc3">VtkWriter::_scale_glyphs</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Scaling of the glyphs </p>

</div>
</div>
<a class="anchor" id="a550b0c3bfe621f238b7d950f9a2fca53"></a><!-- doxytag: member="VtkWriter::_signal_data" ref="a550b0c3bfe621f238b7d950f9a2fca53" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classISignalData.html">ISignalData</a>* <a class="el" href="classVtkWriter.html#a550b0c3bfe621f238b7d950f9a2fca53">VtkWriter::_signal_data</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The diffusion weighted signal data </p>

</div>
</div>
<a class="anchor" id="aef2de19fd2bd57475a47b92e969f433f"></a><!-- doxytag: member="VtkWriter::_sizeFreeI2R" ref="aef2de19fd2bd57475a47b92e969f433f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structmat__t.html">mat_t</a> <a class="el" href="classVtkWriter.html#aef2de19fd2bd57475a47b92e969f433f">VtkWriter::_sizeFreeI2R</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Transformation matrix from ijk-RAS with voxel size normalized out </p>

</div>
</div>
<a class="anchor" id="ab62b8734b94ff0bbbac6c81a6048fb76"></a><!-- doxytag: member="VtkWriter::_tensor_space" ref="ab62b8734b94ff0bbbac6c81a6048fb76" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classVtkWriter.html#ab62b8734b94ff0bbbac6c81a6048fb76">VtkWriter::_tensor_space</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>How many indeces in the state are used up by 1 tensor </p>

</div>
</div>
<a class="anchor" id="a8a51cf2e6197e2ddd3e9cd8712a6d49f"></a><!-- doxytag: member="VtkWriter::_transform_position" ref="a8a51cf2e6197e2ddd3e9cd8712a6d49f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classVtkWriter.html#a8a51cf2e6197e2ddd3e9cd8712a6d49f">VtkWriter::_transform_position</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>If set to true, WritePoint will convert the points from ijk to RAS space before writing </p>

</div>
</div>
<a class="anchor" id="a629ae9b78e15790625ec5f438da98d6c"></a><!-- doxytag: member="VtkWriter::_write_tensors" ref="a629ae9b78e15790625ec5f438da98d6c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classVtkWriter.html#a629ae9b78e15790625ec5f438da98d6c">VtkWriter::_write_tensors</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Whether to attach the tensors to the fiber </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="vtk__writer_8h_source.html">vtk_writer.h</a></li>
<li><a class="el" href="vtk__writer_8cc.html">vtk_writer.cc</a></li>
</ul>
</div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address class="footer"><small>Generated on Fri Mar 16 2012 13:27:40 for UKFTractography by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.1 </small></address>
</body>
</html>
